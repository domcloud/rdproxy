name: Go Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24' 

    - name: Check out code
      uses: actions/checkout@v4

    - name: Build Binary
      run: make build-ci

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset AMD64
      id: upload-release-asset-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/rdproxy-linux-amd64.tar.gz
        asset_name: rdproxy-linux-amd64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload Release Asset ARM64
      id: upload-release-asset-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/rdproxy-linux-arm64.tar.gz
        asset_name: rdproxy-linux-arm64.tar.gz
        asset_content_type: application/octet-stream
